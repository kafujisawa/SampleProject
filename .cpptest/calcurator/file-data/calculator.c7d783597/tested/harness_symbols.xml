<?xml version="1.0" encoding="UTF-8"?>
<Symbols version="2.0">
    <TranslationUnitId>3645249126_16444_3990736663</TranslationUnitId>
    <HasCoverageInfo>true</HasCoverageInfo>
    <File name="C:\Program Files (x86)\Jenkins\workspace\gitSample\SampleProject\calcurator\calculator\src\calculator.c" id="1"/>
    <File name="C:\Program Files (x86)\Jenkins\workspace\gitSample\SampleProject\calcurator\tests\autogenerated\calculator\src\calculator.c\TestSuite_main.c" id="2"/>
    <Function id="printf" name="ZGprintfX" decorated_name="int printf(const char *, ...)" sorted_name="printf" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE int __attribute__((__cdecl__)) </declaration_prefix>
         <declaration_suffix>_Stub_printf (const char * _MT_var14, ...) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE int __attribute__((__cdecl__)) printf (const char * _MT_var16, ...) </orig_declaration>
         <trigger_name>printf</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;printf&quot;)-&gt;WithRefArg(&quot;_MT_var14&quot;, &amp;_MT_var14, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;printf&quot;)-&gt;WithRefArg(&quot;_MT_var14&quot;, &amp;_MT_var14, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__return&quot;, &amp;__return, tgr_int_type())-&gt;End()</post_trigger_call>
         <return_var_decl>int __return</return_var_decl>
         <return_expression>0</return_expression>
      </stub_declaration>
    </Function>
    <Function id="inputconsole" name="ZMinputconsoleX" decorated_name="void inputconsole(char *)" sorted_name="inputconsole" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE void </declaration_prefix>
         <declaration_suffix>_Stub_inputconsole (char * _MT_var2) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE void inputconsole (char * _MT_var17) </orig_declaration>
         <trigger_name>inputconsole</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;inputconsole&quot;)-&gt;WithRefArg(&quot;_MT_var2&quot;, &amp;_MT_var2, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;inputconsole&quot;)-&gt;WithRefArg(&quot;_MT_var2&quot;, &amp;_MT_var2, tgr_ptr_type(tgr_char_type()))-&gt;End()</post_trigger_call>
         <orig_call>inputconsole(_MT_var2)</orig_call>
      </stub_declaration>
    </Function>
    <Function id="createOutputStatement" name="ZbFcreateOutputStatementX" decorated_name="void createOutputStatement(char *, char *)" sorted_name="createOutputStatement" stub_used="true" needed="true">
      <stub_declaration complete="true">
         <declaration_prefix>EXTERN_C_LINKAGE void </declaration_prefix>
         <declaration_suffix>_Stub_createOutputStatement (char * _MT_var8, char * _MT_var9) </declaration_suffix>
         <orig_declaration>EXTERN_C_LINKAGE void createOutputStatement (char * _MT_var18, char * _MT_var19) </orig_declaration>
         <trigger_name>createOutputStatement</trigger_name>
         <trigger_call>CPPTEST_ACTUAL_CALL_C(&quot;createOutputStatement&quot;)-&gt;WithRefArg(&quot;_MT_var8&quot;, &amp;_MT_var8, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_MT_var9&quot;, &amp;_MT_var9, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;__callOrig&quot;, &amp;__callOrig, tgr_int_type())-&gt;End()</trigger_call>
         <post_trigger_call>CPPTEST_ACTUAL_AFTER_CALL_C(&quot;createOutputStatement&quot;)-&gt;WithRefArg(&quot;_MT_var8&quot;, &amp;_MT_var8, tgr_ptr_type(tgr_char_type()))-&gt;WithRefArg(&quot;_MT_var9&quot;, &amp;_MT_var9, tgr_ptr_type(tgr_char_type()))-&gt;End()</post_trigger_call>
         <orig_call>createOutputStatement(_MT_var8, _MT_var9)</orig_call>
      </stub_declaration>
    </Function>
    <Function id="main" name="ZEmainX" decorated_name="int main(void)" sorted_name="main">
      <definition type="orig" source="code" file_id="1" line="17" col="5"/>
    </Function>
    <Function id="TestSuite_main_551fb357_testSuiteBegin" name="ZcGTestSuite_main_551fb357_testSuiteBeginX" decorated_name="void TestSuite_main_551fb357_testSuiteBegin(void)" sorted_name="TestSuite_main_551fb357_testSuiteBegin">
      <definition type="orig" source="code" file_id="2" line="9" col="356"/>
    </Function>
    <Function id="TestSuite_main_551fb357_callTest" name="ZcATestSuite_main_551fb357_callTestX" decorated_name="int TestSuite_main_551fb357_callTest(const char *)" sorted_name="TestSuite_main_551fb357_callTest">
      <definition type="orig" source="code" file_id="2" line="13" col="6"/>
    </Function>
    <Function id="TestSuite_main_551fb357_setUp" name="ZbNTestSuite_main_551fb357_setUpX" decorated_name="void TestSuite_main_551fb357_setUp(void)" sorted_name="TestSuite_main_551fb357_setUp">
      <definition type="orig" source="code" file_id="2" line="16" col="6"/>
    </Function>
    <Function id="TestSuite_main_551fb357_tearDown" name="ZcATestSuite_main_551fb357_tearDownX" decorated_name="void TestSuite_main_551fb357_tearDown(void)" sorted_name="TestSuite_main_551fb357_tearDown">
      <definition type="orig" source="code" file_id="2" line="21" col="6"/>
    </Function>
</Symbols>

